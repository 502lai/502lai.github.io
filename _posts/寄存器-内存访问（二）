# 内存中字的存储
## 低地址存低位，高地址存高位（C语言小端、相反则大端，windows小端）

## 8086CPU中有一个 DS寄存器，通常用来存放要访问的数据的段地址。
DS和[address]

例如：我们要读取10000H单元的内容可以用如下程序段进行：
          mov bx,1000H
          mov ds,bx
          mov al,[0]
上面三条指令将10000H（1000:0）中的数据读到al中。


# mov 功能
已知的mov指令可完成的两种传送功能：
（1）将数据直接送入寄存器；
（2）将一个寄存器中的内容送入另一个寄存器中。
 (3) mov 指令 还可以将一个内存单元中的内容送入一个寄存器。
 	 或将寄存器内容写入内存
## 如何用mov指令从10000H中读取数据？
10000H表示为1000:0（段地址:偏移地址）
将段地址1000H放入ds
用mov al,[0]完成传送（mov指令中的[]说明操作对象是一个内存单元，[]中的0说明这个内存单元的偏移地址是0，它的段地址默认放在ds中）

## 如何把1000H送入ds？
传送指令 mov ax,1
相似的方式 mov ds,1000H?
8086CPU不支持将数据直接送入段寄存器的操作，ds是一个段寄存器。
 （硬件设计的问题）
mov ds,1000H 是非法的。
数据->一般的寄存器->段寄存器


## 因为8086CPU是16位结构，有16根数据线，所以，可以一次性传送16位的数据，也就是一次性传送一个字。
